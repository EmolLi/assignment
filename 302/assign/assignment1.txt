(* Assignment 1 *) (* Do not edit this line. *)
(* Student name: Duan Li, Id Number: 260683698 *) (* Edit this line. *)

(* In the template below we have written the names of the functions that
you need to define.  You MUST use these names.  If you introduce auxiliary
functions you can name them as you like except that your names should not
clash with any of the names we are using.  We have also shown the types
that you should have.  Your code must compile and must not go into infinite
loops.  *)

(* Question 1 *) (* Do not edit this line. *)

(* val sumlist : l:float list -> float *)
let rec sumlist l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* val squarelist : l:float list -> float list *)
let rec squarelist l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* val mean : l:float list -> float *)
let mean l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* val mean_diffs : l:float list -> float list *)
let mean_diffs l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* val variance : l:float list -> float *)
let variance l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* End of question 1 *) (* Do not edit this line. *)

(* Question 2 *) (* Do not edit this line. *)

(* val memberof : 'a * 'a list -> bool when 'a : equality *)
let rec memberof l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* val remove : 'a * 'a list -> 'a list when 'a : equality *)
let rec remove l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* End of question 2 *) (* Do not edit this line *)

(* Question 3 *) (* Do not edit this line *)

(* val isolate : l:'a list -> 'a list when 'a : equality *)
let rec isolate l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* End of question 3 *) (* Do not edit this line *)

(* Question 4 *) (* Do not edit this line *)

(* val common : 'a list * 'a list -> 'a list when 'a : equality *)
let rec common l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* End of question 4 *) (* Do not edit this line *)

(* Question 5 *) (* Do not edit this line *)

(* val split : l:'a list -> 'a list * 'a list *)
let rec split l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* val merge : 'a list * 'a list -> 'a list when 'a : comparison *)
let rec merge l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* val mergesort : l:'a list -> 'a list when 'a : comparison *)
let rec mergesort l = failwith "Error - not implemented" (* remove failwith and replace with your code *)

(* End of question 5 *) (* Do not edit this line *)

